
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""tag" fugitive
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Hack #219
"Hack #219
"Hack #219
"Vim-users.jp - Hack #219: Gitを使う2 – Fugitive.vim
"http://vim-users.jp/2011/06/hack219/

":help fugitive 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"gitステータス
nnoremap <Space>gs :<C-u>Gstatus<Enter>
"add
nnoremap <Space>ga :<C-u>Gwrite<Enter>
"コミット
nnoremap <Space>gc :<C-u>Gcommit<Enter>
nnoremap <Space>gg :<C-u>Gcommit<Enter>

"コミットのやり直し
"これはコミットしたあとにファイルの追加を忘れた場合、
"git add してファイルを追加したあとにもう一度同じコミットをやり直せる。
nnoremap <Space>gC :<C-u>Git commit --amend<Enter>

"差分を取る
nnoremap <Space>gd :<C-u>Gdiff<Enter>

"そのファイルはどの部分を誰が何時書いたかがわかる。
nnoremap <Space>gb :<C-u>Gblame<Enter>

nnoremap <Space>gl :<C-u>Glog<Enter>



"使えない
"nnoremap <Space>gggg :<C-u>Gwrite<Enter>Gcommit<Enter>













""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""tag" fugitive ↑設定↑			
"            ↓操作方法、説明↓
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コマンド比較。
"git					fugitive		action
":Git add %				:Gwrite			Stage the current file to the index
":Git checkout %		:Gread			Revert current file to last checked in version
":Git rm %				:Gremove		Delete the current file and the corresponding Vim buffer
":Git mv %				:Gmove			Rename the current file and the corresponding Vim buffer
" %は現在のバッファという意味。

":Gdiff[ rev]: 		git diff[ --cached] {編集中のファイル}
":Gstatus: 				git status
":GlLog[ rev]: 		git log {編集中のファイル}
":Gwrite: 				git add {編集中のファイル}
":Gread[ rev]: 		git checkout {編集中のファイル}
":Gcommit: 				staged なファイルがあれば git commit なければ git status
":Gblame[ rev]: 	git blame {編集中のファイル}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"VimmerなGit使いはfugitive.vimを今すぐ入れたほうがいい - SELECT * FROM life;
"http://d.hatena.ne.jp/yuku_t/20110427/1303868482
"VimmerなGit使いはfugitive.vimを今すぐ入れたほうがいい - SELECT * FROM life;
"http://d.hatena.ne.jp/yuku_t/20110427/1303868482
"VimmerなGit使いはfugitive.vimを今すぐ入れたほうがいい - SELECT * FROM life;
"http://d.hatena.ne.jp/yuku_t/20110427/1303868482



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コマンド早見表
"コマンド早見表
"コマンド早見表
"これらのコマンドは全てgitリポジトリ内でのみ操作可能。

":Gstatus		"新しい窓を作ってgit statusを表示
":Gwrite		"現在開いているソースをgit add
":Gread			"現在開いているソースの直前のコミット時のソースを表示
":Gremove		"現在開いているソースをgit rmする
":Gcommit		"git commit
":Gblame		"現在のソースをgit blame。vimが色づけしてくれる
":Gdiff			"現在のソースの変更点をvimdiffで表示
":Gmove destination/path		"現在開いているソースをgit mvする
"この他にもいくつかコマンドがあるので、:help fugitiveを実行していただきたい。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"変更のあったファイルにカーソルを合わせた状態で
"Dで:Gdiff起動(差分表示)
"-でstageとunstageの切り替え
"pでパッチを表示
"Enterでファイル表示

":Gstatusの画面上で
"Cでcommit
"という機能がある



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Gstatus
"Gstatus
"Gstatus
":Gstatus を使用すると、Window が split され git status の結果が表示されます。
"定義されたいくつかの mapping を利用することで、更に便利になります。

"まず、カーソルを目的のファイルがある行に合わせる。
"D: 		Gdiff起動 差分表示			git diff[ --cached]
"-: 		add orアンステージ			git add もしくは reset
"p: 		パッチ表示							git add -p
"Enter	ファイル表示
"C: 		コミット								git commit
": 			カーソル下にあるファイルを edit



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gwrite
":Gwrite
":Gwrite

":Gwriteは引数にgit-addしたいファイルへのパスを設定できる。
"省略したら現在開いているファイルが対象となる。

"Fugitive.vimで指定するパスが

"相対パスだった場合
"現在のディレクトリから設定される。

"絶対パスの場合
"リポジトリのホームディレクトリから設定される。
"(ファイルシステムのホームディレクトリではない)

":Gwqを使うと:Gwriteしたあとに:wqが呼ば保存され終了。


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gread
":Gread
":Gread
"現在開いているソースの直前のコミット時のソースを表示してくれる。
"表示されたファイルは上書きされているのではなく、バッファに展開されているだけ。

"revisionも指定できるので1つ前のコミット時の様子をみたければ:Gread HEAD^でいける。
"現在との差分を表示したい場合は：Gdiffを使う。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gremove
":Gremove
":Gremove
"引数でパスが与えられたファイルをgit-rmする。
"パスが省略された場合は現在開いているファイルがgit-rmされる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gmove
":Gmove
":Gmove
"Gmove destination/pathと指定することによって、開いているファイルをgit-mvする。
"パスは現在のディレクトリからの相対パスか、
"リポジトリホームからの絶対パスで指定できる。
"/で始まると絶対パスになる。

"移動した後は自動的に移動した後のファイルを開いてくれる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gdiff
":Gdiff
":Gdiff
":Gdiffは現在開いているファイルに加えられた変更をvimdiffでみせてくれる。
"しかも、引数にrevisionを指定できる。
"たとえばmasterブランチとの差分をみたいなら：Gdiff masterだ。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gblame
":Gblame
":Gblame
"ソースの変更箇所が、どのハッシュで登録されているかが分かる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gbrowse
":Gbrowse
":Gbrowse
"ブラウザでgithubからみれる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


